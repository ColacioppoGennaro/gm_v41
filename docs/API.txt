# API ENDPOINTS - SMARTLIFE AI ORGANIZER

BASE_URL: https://tuodominio.it/api

Formato risposte: JSON
Autenticazione: JWT Bearer Token (tranne /auth/*)

---

## üìç CONVENZIONI

### Headers Richieste Autenticate
```
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
Content-Type: application/json
```

### Codici Stato HTTP
- 200 OK - Richiesta completata con successo
- 201 Created - Risorsa creata
- 204 No Content - Azione completata senza body
- 400 Bad Request - Dati non validi
- 401 Unauthorized - Token mancante o non valido
- 403 Forbidden - Permessi insufficienti / quota superata
- 404 Not Found - Risorsa non trovata
- 422 Unprocessable Entity - Validazione fallita
- 500 Internal Server Error - Errore server

### Formato Errori
```json
{
  "success": false,
  "error": {
    "code": "VALIDATION_ERROR",
    "message": "Email gi√† registrata",
    "details": {
      "field": "email"
    }
  }
}
```

---

## üîê AUTENTICAZIONE

### POST /auth/register
Registrazione nuovo utente

**Input:**
```json
{
  "email": "user@example.com",
  "password": "Password123!",
  "password_confirm": "Password123!"
}
```

**Output (201):**
```json
{
  "success": true,
  "data": {
    "user": {
      "id": 123,
      "email": "user@example.com",
      "plan": "free",
      "created_at": "2025-10-19T14:30:00Z"
    },
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
  }
}
```

**Errori:**
- 422: Email gi√† registrata
- 422: Password troppo debole (min 8 caratteri)
- 422: Password non corrispondono

---

### POST /auth/login
Login utente esistente

**Input:**
```json
{
  "email": "user@example.com",
  "password": "Password123!"
}
```

**Output (200):**
```json
{
  "success": true,
  "data": {
    "user": {
      "id": 123,
      "email": "user@example.com",
      "plan": "pro",
      "ai_queries_count": 15,
      "storage_used_bytes": 5242880,
      "last_login_at": "2025-10-19T14:30:00Z"
    },
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
  }
}
```

**Errori:**
- 401: Credenziali non valide
- 403: Account disabilitato

---

### POST /auth/logout
Logout (invalida token)

**Input:** nessuno (solo header Authorization)

**Output (204):** No Content

---

### GET /auth/me
Profilo utente loggato

**Output (200):**
```json
{
  "success": true,
  "data": {
    "id": 123,
    "email": "user@example.com",
    "plan": "pro",
    "ai_queries_count": 15,
    "ai_queries_limit": 500,
    "storage_used_mb": 5.0,
    "storage_limit_mb": 500,
    "google_calendar_connected": true,
    "created_at": "2025-09-15T10:00:00Z"
  }
}
```

---

## üìÖ EVENTI

### GET /events
Lista eventi utente

**Query Params:**
- `from` (optional): data inizio range (ISO 8601)
- `to` (optional): data fine range
- `category_id` (optional): filtra per categoria
- `status` (optional): pending | completed
- `limit` (optional): default 50, max 200
- `offset` (optional): per paginazione

**Esempio:**
```
GET /events?from=2025-10-01&to=2025-10-31&status=pending&limit=50
```

**Output (200):**
```json
{
  "success": true,
  "data": {
    "events": [
      {
        "id": 1,
        "title": "Team Meeting",
        "description": "Revisione progetto Q4",
        "start_datetime": "2025-10-20T09:00:00Z",
        "end_datetime": "2025-10-20T10:30:00Z",
        "amount": null,
        "status": "pending",
        "category": {
          "id": 1,
          "name": "Lavoro",
          "color": "#3B82F6",
          "icon": "üíº"
        },
        "recurrence_pattern": "FREQ=WEEKLY;BYDAY=MO",
        "reminders": [15, 60],
        "has_document": false,
        "source": "local",
        "created_at": "2025-10-15T12:00:00Z"
      }
    ],
    "pagination": {
      "total": 156,
      "limit": 50,
      "offset": 0,
      "has_more": true
    }
  }
}
```

---

### GET /events/{id}
Dettaglio singolo evento

**Output (200):**
```json
{
  "success": true,
  "data": {
    "id": 1,
    "title": "Pagamento Bolletta Luce",
    "start_datetime": "2025-10-25T11:00:00Z",
    "amount": 75.50,
    "category": { /* ... */ },
    "documents": [
      {
        "id": 10,
        "filename": "bolletta_luce.pdf",
        "filesize_bytes": 245760,
        "ai_summary": "Bolletta energia elettrica settembre 2025"
      }
    ]
  }
}
```

**Errori:**
- 404: Evento non trovato
- 403: Evento appartiene ad altro utente

---

### POST /events
Crea nuovo evento

**Input:**
```json
{
  "title": "Dentista",
  "description": "Controllo annuale",
  "start_datetime": "2025-10-25T15:00:00Z",
  "end_datetime": "2025-10-25T16:00:00Z",
  "category_id": 3,
  "amount": 80.00,
  "reminders": [1440, 60],
  "recurrence_pattern": null,
  "color": null
}
```

**Output (201):**
```json
{
  "success": true,
  "data": {
    "id": 45,
    "title": "Dentista",
    /* ...tutti i campi... */
    "created_at": "2025-10-19T14:35:00Z"
  }
}
```

**Errori:**
- 422: Titolo obbligatorio
- 422: Data inizio nel passato
- 422: Categoria non trovata
- 403: Limite eventi raggiunto (FREE: 50/mese)

**Note:** 
- Se utente PRO + Google Calendar connesso ‚Üí evento esportato automaticamente

---

### PUT /events/{id}
Modifica evento esistente

**Input:** stessi campi di POST (tutti opzionali)

**Output (200):** stesso di GET /events/{id}

**Errori:**
- 404: Evento non trovato
- 403: Non puoi modificare eventi Google Calendar

---

### DELETE /events/{id}
Elimina evento

**Output (204):** No Content

**Errori:**
- 404: Evento non trovato
- 403: Evento appartiene ad altro utente

**Note:**
- Se evento ricorrente: elimina master + tutte istanze
- Se evento Google: elimina anche da Google Calendar

---

### POST /events/{id}/complete
Segna evento come completato

**Output (200):**
```json
{
  "success": true,
  "data": {
    "id": 45,
    "status": "completed"
  }
}
```

---

### POST /events/{id}/uncomplete
Segna evento come pending

**Output (200):** come /complete

---

## üìÅ DOCUMENTI

### GET /documents
Lista documenti utente

**Query Params:**
- `event_id` (optional): filtra per evento associato
- `limit`: default 50
- `offset`: paginazione

**Output (200):**
```json
{
  "success": true,
  "data": {
    "documents": [
      {
        "id": 1,
        "filename": "bolletta_luce_set.pdf",
        "original_filename": "bolletta_luce_settembre_2025.pdf",
        "filesize_bytes": 245760,
        "document_type": "Bolletta energia elettrica",
        "ai_summary": "Bolletta per fornitura energia elettrica settembre 2025",
        "extracted_amount": 75.50,
        "extracted_due_date": "2025-11-15",
        "event": {
          "id": 12,
          "title": "Pagamento bolletta luce"
        },
        "created_at": "2025-10-15T10:00:00Z"
      }
    ],
    "pagination": { /* ... */ }
  }
}
```

---

### GET /documents/{id}
Dettaglio documento

**Output (200):** singolo documento con tutti i campi

---

### GET /documents/{id}/download
Download file PDF

**Output (200):**
```
Content-Type: application/pdf
Content-Disposition: attachment; filename="bolletta_luce.pdf"

[binary PDF data]
```

**Errori:**
- 404: Documento non trovato
- 403: Non puoi scaricare documenti altri utenti

---

### POST /documents/upload
Upload nuovo documento

**Input:**
```
Content-Type: multipart/form-data

file: [PDF file]
event_id: 12 (optional)
auto_analyze: true (optional, default true)
```

**Output (201):**
```json
{
  "success": true,
  "data": {
    "id": 25,
    "filename": "doc_25_1729345678.pdf",
    "filesize_bytes": 512000,
    "analysis": {
      "document_type": "Fattura",
      "suggested_title": "Pagamento fornitura materiale",
      "amount": 150.00,
      "due_date": "2025-11-30"
    },
    "suggested_event": {
      "title": "Pagamento fornitura materiale",
      "start_datetime": "2025-11-30T09:00:00Z",
      "amount": 150.00,
      "category_id": 4
    }
  }
}
```

**Errori:**
- 422: File non PDF
- 422: File troppo grande (FREE: 10MB totali, PRO: 500MB)
- 403: Limite storage raggiunto
- 403: Limite query AI raggiunto

**Note:**
- Analisi AI √® asincrona se file > 2MB
- Se `auto_analyze=false` ‚Üí analisi su richiesta via /documents/{id}/analyze

---

### POST /documents/{id}/analyze
Analizza documento con AI (se non fatto in upload)

**Output (200):**
```json
{
  "success": true,
  "data": {
    "document_type": "Ricevuta",
    "suggested_title": "Pagamento iscrizione palestra",
    "amount": 50.00,
    "due_date": null
  }
}
```

**Errori:**
- 403: Limite query AI raggiunto
- 422: Documento gi√† analizzato

---

### DELETE /documents/{id}
Elimina documento

**Output (204):** No Content

**Note:**
- File fisico eliminato da filesystem
- Storage utente aggiornato

---

### GET /documents/search
Ricerca semantica documenti

**Query Params:**
- `q`: query testuale (es. "bollette luce")
- `limit`: default 20

**Output (200):**
```json
{
  "success": true,
  "data": {
    "results": [
      {
        "id": 1,
        "filename": "bolletta_luce.pdf",
        "relevance_score": 0.92,
        "ai_summary": "...",
        "extracted_amount": 75.50
      }
    ]
  }
}
```

**Note:**
- Usa embeddings Gemini per similarit√† semantica
- Conta come 1 query AI

---

## üè∑Ô∏è CATEGORIE

### GET /categories
Lista categorie utente

**Output (200):**
```json
{
  "success": true,
  "data": [
    {
      "id": 1,
      "name": "Lavoro",
      "color": "#3B82F6",
      "icon": "üíº",
      "event_count": 24,
      "is_default": true
    }
  ]
}
```

---

### POST /categories
Crea nuova categoria

**Input:**
```json
{
  "name": "Sport",
  "color": "#10B981",
  "icon": "‚öΩ"
}
```

**Output (201):** categoria creata

**Errori:**
- 422: Nome gi√† esistente per questo utente
- 422: Colore non valido (formato hex)

---

### PUT /categories/{id}
Modifica categoria

**Input:** campi opzionali

**Output (200):** categoria aggiornata

---

### DELETE /categories/{id}
Elimina categoria

**Output (204):** No Content

**Errori:**
- 403: Impossibile eliminare categoria con eventi associati
- 403: Impossibile eliminare categoria default

**Note:**
- Prima spostare eventi su altra categoria

---

## ü§ñ AI ASSISTANT

### POST /ai/chat
Chat conversazionale per creare/modificare eventi

**Input:**
```json
{
  "message": "Crea evento dentista domani alle 15",
  "context": {
    "timezone": "Europe/Rome",
    "current_date": "2025-10-19",
    "recent_events": [
      {"title": "Team Meeting", "start_datetime": "2025-10-20T09:00:00Z"}
    ]
  }
}
```

**Output (200):**
```json
{
  "success": true,
  "data": {
    "ai_response": "Ho creato l'evento 'Dentista' per domani 20 ottobre alle 15:00. Vuoi aggiungere un reminder?",
    "action": "event_created",
    "event": {
      "id": 78,
      "title": "Dentista",
      "start_datetime": "2025-10-20T15:00:00Z"
    }
  }
}
```

**Possibili `action`:**
- `event_created`: evento creato
- `event_modified`: evento modificato
- `clarification_needed`: serve pi√π info
- `no_action`: risposta conversazionale

**Errori:**
- 403: Limite query AI raggiunto (FREE: 20/mese, PRO: 500/mese)
- 422: Messaggio vuoto

**Note:**
- Conta come 1 query AI
- Supporta linguaggio naturale italiano

---

## üîó GOOGLE CALENDAR SYNC

### GET /auth/google/start
Avvia OAuth flow Google

**Query Params:**
- `redirect_url` (optional): URL ritorno dopo auth

**Output (302 Redirect):**
Redirect a Google OAuth consent screen

**Errori:**
- 403: Piano FREE non supporta Google Calendar

---

### GET /auth/google/callback
Callback OAuth Google (non chiamare direttamente)

**Query Params:**
- `code`: authorization code da Google
- `state`: token CSRF

**Output (302 Redirect):**
Redirect a frontend con success=true

**Note:**
- Backend salva access_token + refresh_token in DB
- Avvia sync automatico eventi futuri

---

### POST /auth/google/disconnect
Disconnetti Google Calendar

**Output (200):**
```json
{
  "success": true,
  "message": "Google Calendar disconnesso"
}
```

**Note:**
- Elimina token da DB
- Eventi locali NON eliminati

---

### POST /events/{id}/sync-google
Forza sync manuale singolo evento

**Output (200):**
```json
{
  "success": true,
  "data": {
    "google_event_id": "abc123xyz",
    "synced_at": "2025-10-19T14:40:00Z"
  }
}
```

**Errori:**
- 403: Google Calendar non connesso
- 422: Evento gi√† sincronizzato

---

## ‚öôÔ∏è IMPOSTAZIONI

### GET /settings
Impostazioni utente

**Output (200):**
```json
{
  "success": true,
  "data": {
    "email": "user@example.com",
    "plan": "pro",
    "google_calendar_connected": true,
    "notification_preferences": {
      "email_reminders": true,
      "weekly_summary": false
    },
    "timezone": "Europe/Rome"
  }
}
```

---

### PUT /settings
Aggiorna impostazioni

**Input:**
```json
{
  "notification_preferences": {
    "email_reminders": false
  },
  "timezone": "Europe/Rome"
}
```

**Output (200):** impostazioni aggiornate

---

### POST /settings/upgrade-pro
Upgrade a piano PRO

**Input:**
```json
{
  "payment_method_id": "pm_1234567890",
  "billing_email": "billing@example.com"
}
```

**Output (200):**
```json
{
  "success": true,
  "data": {
    "plan": "pro",
    "subscription_id": "sub_abc123",
    "next_billing_date": "2025-11-19"
  }
}
```

**Note:**
- Integrazione Stripe/PayPal in fase 2
- Per ora endpoint placeholder

---

## üìä STATISTICHE

### GET /stats/overview
Statistiche generali utente

**Output (200):**
```json
{
  "success": true,
  "data": {
    "total_events": 156,
    "completed_events": 87,
    "pending_events": 69,
    "total_documents": 24,
    "storage_used_mb": 45.2,
    "ai_queries_used": 15,
    "ai_queries_remaining": 485,
    "categories_count": 6,
    "events_this_month": 23
  }
}
```

---

## üö® RATE LIMITING

Tutti gli endpoint (tranne /auth/login) hanno rate limit:

**FREE:**
- 100 richieste/ora generiche
- 20 query AI/mese

**PRO:**
- 500 richieste/ora generiche
- 500 query AI/mese

**Header Risposta:**
```
X-RateLimit-Limit: 100
X-RateLimit-Remaining: 87
X-RateLimit-Reset: 1729348200
```

**Errore 429 (Too Many Requests):**
```json
{
  "success": false,
  "error": {
    "code": "RATE_LIMIT_EXCEEDED",
    "message": "Limite richieste superato. Riprova tra 15 minuti.",
    "retry_after": 900
  }
}
```

---

## üîç QUERY AI - CONTEGGIO

Queste azioni consumano 1 query AI:
- POST /ai/chat
- POST /documents/upload (con auto_analyze=true)
- POST /documents/{id}/analyze
- GET /documents/search

Conteggio visibile in:
- GET /auth/me ‚Üí `ai_queries_count`
- Header risposta: `X-AI-Queries-Remaining: 485`

---

## üõ†Ô∏è TESTING

### Endpoint di test (solo development)

**GET /api/health**
```json
{
  "status": "ok",
  "database": "connected",
  "gemini_api": "ok",
  "version": "1.0.0"
}
```

**POST /api/test/reset-user-quotas** (admin only)
Reset manuale quote utente per testing

---

## üìù NOTE IMPLEMENTAZIONE

### Timezone
- Frontend invia sempre datetime in UTC (ISO 8601)
- Backend salva in UTC
- Frontend converte per display

### Paginazione
- Default limit: 50
- Max limit: 200
- Usa `offset` per scorrere

### Validazione Date
- Data inizio evento: min oggi
- Data fine: opzionale, se presente deve essere > inizio
- Ricorrenza: validata con libreria iCalendar

### Upload File
- Max size: 10MB per file
- Tipi accettati: application/pdf
- Salvataggio: /uploads/user_{id}/doc_{id}_{timestamp}.pdf

### Token JWT
- Durata: 7 giorni
- Refresh automatico: ogni richiesta se <24h scadenza
- Algoritmo: HS256

---

FINE API.txt
